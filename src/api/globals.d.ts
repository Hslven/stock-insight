/* tslint:disable */
/* eslint-disable */
/**
 * Docs - version 1.0
 *
 * The Json to click [this](http://localhost:3000/api-docs/json)
 *
 * OpenAPI version: 3.0.0
 *
 * Contact:
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
          any,
          Responded
        >,
        'params'
      >
    : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never;

export type ProductDto = {
  /**
   * [required]
   */
  productId: string;
  /**
   * [required]
   */
  name: string;
  /**
   * [required]
   */
  price: number;
  category?: string;
  description?: string;
  imageUrl?: string;
  /**
   * [required]
   */
  isAvailable: boolean;
  /**
   * [required]
   */
  createdAt: string;
  /**
   * [required]
   */
  updatedAt: string;
  menu?: MenuDto;
  /**
   * [required]
   */
  menuId: string;
  /**
   * [required]
   */
  userId: string;
};
export type MenuDto = {
  /**
   * [required]
   */
  menuId: string;
  /**
   * [required]
   */
  name: string;
  description?: string;
  imageUrl?: string;
  /**
   * [required]
   */
  isAvailable: boolean;
  /**
   * [required]
   */
  createdAt: string;
  /**
   * [required]
   */
  updatedAt: string;
  Product?: ProductDto[];
  User?: UserDto;
  /**
   * [required]
   */
  userId: string;
};
export type UserSharedDto = {
  /**
   * [required]
   */
  sharedId: string;
  sharedBy?: UserDto;
  /**
   * [required]
   */
  sharedById: string;
  sharedWith?: UserDto;
  /**
   * [required]
   */
  sharedWithId: string;
  /**
   * [required]
   */
  createdAt: string;
};
export type UserDto = {
  /**
   * [required]
   */
  userId: string;
  /**
   * [required]
   */
  name: string;
  /**
   * [required]
   */
  wallet: number;
  /**
   * [required]
   */
  createdAt: string;
  /**
   * [required]
   */
  updatedAt: string;
  menus?: MenuDto[];
  sharedWith?: UserSharedDto[];
  sharedBy?: UserSharedDto[];
};
export type ObjectResponseDto = {
  error?: string;
  /**
   * [required]
   */
  path: string;
  /**
   * [required]
   */
  statusCode: number;
  /**
   * [required]
   */
  message: string;
  /**
   * [required]
   */
  data: object;
};
export type CreateUserDto = {
  /**
   * 名称
   * [required]
   */
  name: string;
  description?: string;
  userId?: string;
};
export type UpdateUserDto = {
  /**
   * 名称
   */
  name?: string;
  description?: string;
  userId?: string;
};
export type CreateMenuDto = {
  /**
   * 菜单名称
   * [required]
   */
  name: string;
  /**
   * 菜单描述
   */
  description?: string;
  /**
   * 菜单图片
   */
  imageUrl?: string;
  /**
   * 用户 ID
   * [required]
   */
  userId: string;
};
export type UpdateMenuDto = {
  /**
   * 菜单名称
   */
  name?: string;
  /**
   * 菜单描述
   */
  description?: string;
  /**
   * 菜单图片
   */
  imageUrl?: string;
  /**
   * 用户 ID
   */
  userId?: string;
};
export type ArrayResponseDto = {
  error?: string;
  /**
   * [required]
   */
  path: string;
  /**
   * [required]
   */
  statusCode: number;
  /**
   * [required]
   */
  message: string;
  /**
   * [required]
   */
  data: Array<object>;
};
export type CreateProductDto = {
  /**
   * 商品名称
   * [required]
   */
  name: string;
  /**
   * 商品描述
   * [required]
   */
  description: string;
  /**
   * 商品价格
   * [required]
   */
  price: number;
  /**
   * 商品分类
   * [required]
   */
  category: string;
  /**
   * 商品图片URL
   * [required]
   */
  imageUrl: string;
  /**
   * 是否可用
   * [required]
   */
  isAvailable: boolean;
};
export type UpdateProductDto = {
  /**
   * 商品名称
   */
  name?: string;
  /**
   * 商品描述
   */
  description?: string;
  /**
   * 商品价格
   */
  price?: number;
  /**
   * 商品分类
   */
  category?: string;
  /**
   * 商品图片URL
   */
  imageUrl?: string;
  /**
   * 是否可用
   */
  isAvailable?: boolean;
};
declare global {
  interface Apis {
    App: {
      /**
       * ---
       *
       * [GET]
       *
       * **path:** /api
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = string
       * ```
       */
      getHello<Config extends Alova2MethodConfig<string>>(
        config?: Config
      ): Alova2Method<string, 'App.getHello', Config>;
    };
    testUser: {
      /**
       * ---
       *
       * [GET] 用户名称
       *
       * **path:** /api/user
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = Array<{
       *   // [required]
       *   userId: string
       *   // [required]
       *   name: string
       *   // [required]
       *   wallet: number
       *   // [required]
       *   createdAt: string
       *   // [required]
       *   updatedAt: string
       *   menus?: Array<{
       *     // [required]
       *     menuId: string
       *     // [required]
       *     name: string
       *     description?: string
       *     imageUrl?: string
       *     // [required]
       *     isAvailable: boolean
       *     // [required]
       *     createdAt: string
       *     // [required]
       *     updatedAt: string
       *     Product?: Array<{
       *       // [required]
       *       productId: string
       *       // [required]
       *       name: string
       *       // [required]
       *       price: number
       *       category?: string
       *       description?: string
       *       imageUrl?: string
       *       // [required]
       *       isAvailable: boolean
       *       // [required]
       *       createdAt: string
       *       // [required]
       *       updatedAt: string
       *       menu?: MenuDto
       *       // [required]
       *       menuId: string
       *       // [required]
       *       userId: string
       *     }>
       *     User?: UserDto
       *     // [required]
       *     userId: string
       *   }>
       *   sharedWith?: Array<{
       *     // [required]
       *     sharedId: string
       *     sharedBy?: UserDto
       *     // [required]
       *     sharedById: string
       *     sharedWith?: UserDto
       *     // [required]
       *     sharedWithId: string
       *     // [required]
       *     createdAt: string
       *   }>
       *   sharedBy?: Array<UserSharedDto>
       * }>
       * ```
       */
      findAll<Config extends Alova2MethodConfig<UserDto[]>>(
        config?: Config
      ): Alova2Method<UserDto[], 'testUser.findAll', Config>;
      /**
       * ---
       *
       * [POST] 用户创建
       *
       * **path:** /api/user
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 名称
       *   // [required]
       *   name: string
       *   description?: string
       *   userId?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   error?: string
       *   // [required]
       *   path: string
       *   // [required]
       *   statusCode: number
       *   // [required]
       *   message: string
       *   // [required]
       *   data: object
       * } & unknown
       * ```
       */
      create<
        Config extends Alova2MethodConfig<ObjectResponseDto & unknown> & {
          data: CreateUserDto;
        }
      >(
        config: Config
      ): Alova2Method<ObjectResponseDto & unknown, 'testUser.create', Config>;
      /**
       * ---
       *
       * [GET] 用户详情
       *
       * **path:** /api/user/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   userId: string
       *   // [required]
       *   name: string
       *   // [required]
       *   wallet: number
       *   // [required]
       *   createdAt: string
       *   // [required]
       *   updatedAt: string
       *   menus?: Array<{
       *     // [required]
       *     menuId: string
       *     // [required]
       *     name: string
       *     description?: string
       *     imageUrl?: string
       *     // [required]
       *     isAvailable: boolean
       *     // [required]
       *     createdAt: string
       *     // [required]
       *     updatedAt: string
       *     Product?: Array<{
       *       // [required]
       *       productId: string
       *       // [required]
       *       name: string
       *       // [required]
       *       price: number
       *       category?: string
       *       description?: string
       *       imageUrl?: string
       *       // [required]
       *       isAvailable: boolean
       *       // [required]
       *       createdAt: string
       *       // [required]
       *       updatedAt: string
       *       menu?: MenuDto
       *       // [required]
       *       menuId: string
       *       // [required]
       *       userId: string
       *     }>
       *     User?: UserDto
       *     // [required]
       *     userId: string
       *   }>
       *   sharedWith?: Array<{
       *     // [required]
       *     sharedId: string
       *     sharedBy?: UserDto
       *     // [required]
       *     sharedById: string
       *     sharedWith?: UserDto
       *     // [required]
       *     sharedWithId: string
       *     // [required]
       *     createdAt: string
       *   }>
       *   sharedBy?: Array<UserSharedDto>
       * }
       * ```
       */
      findOne<
        Config extends Alova2MethodConfig<UserDto> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<UserDto, 'testUser.findOne', Config>;
      /**
       * ---
       *
       * [PATCH] 用户更新
       *
       * **path:** /api/user/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 名称
       *   name?: string
       *   description?: string
       *   userId?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   error?: string
       *   // [required]
       *   path: string
       *   // [required]
       *   statusCode: number
       *   // [required]
       *   message: string
       *   // [required]
       *   data: object
       * } & unknown
       * ```
       */
      update<
        Config extends Alova2MethodConfig<ObjectResponseDto & unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
          data: UpdateUserDto;
        }
      >(
        config: Config
      ): Alova2Method<ObjectResponseDto & unknown, 'testUser.update', Config>;
      /**
       * ---
       *
       * [DELETE] 用户删除
       *
       * **path:** /api/user/{id}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   id: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      remove<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            id: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'testUser.remove', Config>;
    };
    Auth: {
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/login
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = object
       * ```
       */
      login<Config extends Alova2MethodConfig<object>>(config?: Config): Alova2Method<object, 'Auth.login', Config>;
    };
    testMenu: {
      /**
       * ---
       *
       * [GET] 菜单列表
       *
       * **path:** /api/menu
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   error?: string
       *   // [required]
       *   path: string
       *   // [required]
       *   statusCode: number
       *   // [required]
       *   message: string
       *   // [required]
       *   data: object
       * } & unknown
       * ```
       */
      findAll<Config extends Alova2MethodConfig<ObjectResponseDto & unknown>>(
        config?: Config
      ): Alova2Method<ObjectResponseDto & unknown, 'testMenu.findAll', Config>;
      /**
       * ---
       *
       * [POST] 菜单创建
       *
       * **path:** /api/menu
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 菜单名称
       *   // [required]
       *   name: string
       *   // 菜单描述
       *   description?: string
       *   // 菜单图片
       *   imageUrl?: string
       *   // 用户 ID
       *   // [required]
       *   userId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   error?: string
       *   // [required]
       *   path: string
       *   // [required]
       *   statusCode: number
       *   // [required]
       *   message: string
       *   // [required]
       *   data: object
       * } & unknown
       * ```
       */
      create<
        Config extends Alova2MethodConfig<ObjectResponseDto & unknown> & {
          data: CreateMenuDto;
        }
      >(
        config: Config
      ): Alova2Method<ObjectResponseDto & unknown, 'testMenu.create', Config>;
      /**
       * ---
       *
       * [GET] 菜单详情
       *
       * **path:** /api/menu/{menuId}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // 菜单ID
       *   // [required]
       *   menuId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   error?: string
       *   // [required]
       *   path: string
       *   // [required]
       *   statusCode: number
       *   // [required]
       *   message: string
       *   // [required]
       *   data: object
       * } & unknown
       * ```
       */
      findOne<
        Config extends Alova2MethodConfig<ObjectResponseDto & unknown> & {
          pathParams: {
            /**
             * 菜单ID
             * [required]
             */
            menuId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<ObjectResponseDto & unknown, 'testMenu.findOne', Config>;
      /**
       * ---
       *
       * [PATCH] 菜单更新
       *
       * **path:** /api/menu/{menuId}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   menuId: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 菜单名称
       *   name?: string
       *   // 菜单描述
       *   description?: string
       *   // 菜单图片
       *   imageUrl?: string
       *   // 用户 ID
       *   userId?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      update<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            menuId: string;
          };
          data: UpdateMenuDto;
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'testMenu.update', Config>;
      /**
       * ---
       *
       * [DELETE] 菜单删除
       *
       * **path:** /api/menu/{menuId}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   menuId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      remove<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * [required]
             */
            menuId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'testMenu.remove', Config>;
    };
    Product: {
      /**
       * ---
       *
       * [POST] 创建商品
       *
       * **path:** /api/product
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 商品名称
       *   // [required]
       *   name: string
       *   // 商品描述
       *   // [required]
       *   description: string
       *   // 商品价格
       *   // [required]
       *   price: number
       *   // 商品分类
       *   // [required]
       *   category: string
       *   // 商品图片URL
       *   // [required]
       *   imageUrl: string
       *   // 是否可用
       *   // [required]
       *   isAvailable: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   error?: string
       *   // [required]
       *   path: string
       *   // [required]
       *   statusCode: number
       *   // [required]
       *   message: string
       *   // [required]
       *   data: Array<object>
       * } & unknown
       * ```
       */
      create<
        Config extends Alova2MethodConfig<ArrayResponseDto & unknown> & {
          data: CreateProductDto;
        }
      >(
        config: Config
      ): Alova2Method<ArrayResponseDto & unknown, 'Product.create', Config>;
      /**
       * ---
       *
       * [GET] 获取所有商品
       *
       * **path:** /api/product
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      findAll<Config extends Alova2MethodConfig<unknown>>(
        config?: Config
      ): Alova2Method<unknown, 'Product.findAll', Config>;
      /**
       * ---
       *
       * [GET] 获取商品详情
       *
       * **path:** /api/product/{productId}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // 商品ID
       *   // [required]
       *   productId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   error?: string
       *   // [required]
       *   path: string
       *   // [required]
       *   statusCode: number
       *   // [required]
       *   message: string
       *   // [required]
       *   data: Array<object>
       * } & unknown
       * ```
       */
      findOne<
        Config extends Alova2MethodConfig<ArrayResponseDto & unknown> & {
          pathParams: {
            /**
             * 商品ID
             * [required]
             */
            productId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<ArrayResponseDto & unknown, 'Product.findOne', Config>;
      /**
       * ---
       *
       * [PATCH] 更新商品信息
       *
       * **path:** /api/product/{productId}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // 商品ID
       *   // [required]
       *   productId: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 商品名称
       *   name?: string
       *   // 商品描述
       *   description?: string
       *   // 商品价格
       *   price?: number
       *   // 商品分类
       *   category?: string
       *   // 商品图片URL
       *   imageUrl?: string
       *   // 是否可用
       *   isAvailable?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      update<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * 商品ID
             * [required]
             */
            productId: string;
          };
          data: UpdateProductDto;
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'Product.update', Config>;
      /**
       * ---
       *
       * [DELETE] 删除商品
       *
       * **path:** /api/product/{productId}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // 商品ID
       *   // [required]
       *   productId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      remove<
        Config extends Alova2MethodConfig<unknown> & {
          pathParams: {
            /**
             * 商品ID
             * [required]
             */
            productId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'Product.remove', Config>;
      /**
       * ---
       *
       * [GET] 获取菜单下的商品列表
       *
       * **path:** /api/product/menu/{menuId}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // 菜单ID
       *   // [required]
       *   menuId: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   error?: string
       *   // [required]
       *   path: string
       *   // [required]
       *   statusCode: number
       *   // [required]
       *   message: string
       *   // [required]
       *   data: Array<object>
       * } & unknown
       * ```
       */
      getMenuProducts<
        Config extends Alova2MethodConfig<ArrayResponseDto & unknown> & {
          pathParams: {
            /**
             * 菜单ID
             * [required]
             */
            menuId: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<ArrayResponseDto & unknown, 'Product.getMenuProducts', Config>;
    };
  }

  var Apis: Apis;
}
